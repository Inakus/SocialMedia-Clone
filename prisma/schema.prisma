// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String    @id @default(cuid())
  username String
  email    String    @unique
  password String
  isAdmin  Boolean   @default(false)
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  post     Post[]
  profile  Profile?
  comments Comment[]
  likes    Like[]
}

model Profile {
  id     String  @id @default(cuid())
  bio    String?
  userId String  @unique
  user   User    @relation(fields: [userId], references: [id])
}

model Post {
  id       String    @id @default(cuid())
  title    String
  content  String
  userId   String
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[]
  likes    Like[]
}

model Comment {
  id       String    @id @default(cuid())
  content  String
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  post     Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
  parent   Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children Comment[] @relation("ParentChild")
  parentId String
  likes    Like[]
}

model Like {
  user      User    @relation(fields: [userId], references: [id])
  comment   Comment @relation(fields: [commentId], references: [id])
  post      Post    @relation(fields: [postId], references: [id])
  userId    String
  commentId String
  postId    String

  @@id([userId, commentId, postId])
}
